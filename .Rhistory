n = (qnorm(.95)*450/e)^2
n = (qnorm(.975)*450/e)^2
n = (qnorm(.9) * 0.25 / 0.01)^2
4
n = (qnorm(.9) * 0.24 / 0.01)^2
n = (qnorm(.9) * 0.5 / 0.01)^2
n = (qnorm(.9) * 0.4 / 0.01)^2
n = (qnorm(.95) * 0.24 / 0.01)^2
n = (qnorm(.95) * 0.25 / 0.01)^2
n = (qnorm(.95) * 0.25 / 0.01)^2
3942^(.5)
62.78535*0.01
62.78535*0.01/.25
pnorm(2.5)
n = (qnorm(.99) * 0.25 / 0.01)^2
n = (qnorm(.995) * 0.25 / 0.01)^2
n = (qnorm(.995) * 0.24 / 0.01)^2
n = (qnorm(.95) * 0.24 / 0.01)^2
n = (qnorm(.98) * 0.24 / 0.01)^2
n = (qnorm(.99) * 0.24 / 0.01)^2
n = (qnorm(.9) * 0.24 / 0.01)^2
n = (qnorm(.9) * (0.24^2) / 0.01)^2
n = (qnorm(.9) * (0.24^.5) / 0.01)^2
n = (qnorm(.9) * (0.25^.5) / 0.01)^2
n = (qnorm(.9) * (0.24^.5) / 0.01)^2
n = (qnorm(.9) * (0.25^.5) / 0.01)^2
n = (qnorm(.9) * (0.24^.5) / 0.01)^2
z = 0.015 / (sqrt(.24 / 3500))
pnorm(z)
pnorm(z)
pnorm(z) - (1 - pnorm(z))
pnorm(z) - pnorm(-z)
p = 331/1000
rm(z, n)
n = 1000
v = p / (1 - p)
e = qnorm(.995) * v^.5 / n^.5
ic = c(p - e, p + e)
v^.5
v = p * (1 - p)
e = qnorm(.995) * v^.5 / n^.5
ic = c(p - e, p + e)
n = (qnorm(.99) * v^.5 / .01) ^ 2
v^.5
n1 = 30
n1 <- 30
p1 = 18 / n1
v1 = p * (1 - p)
v1 = p1 * (1 - p1)
dp1 = v1 ^ 0.5
e = qnorm(.95) * sqrt(v1) / sqrt(n1)
e1 = qnorm(.95) * sqrt(v1) / sqrt(n1)
rm(e)
ic1 = c(p1 - e1, p1 + n1)
ic1 = c(p1 - e1, p1 + e1)
n2 = 40
p2 = 13 / n2
v2 = p2 * (1 - p2)
vf = v1 / n1 + v2 / n2
ef = qnorm(.95) * vf^.5
pf = p1 - p2
pf + ef
pf - ef
p <- 78/100
n <- 100
v <- p * (1 - p) / n
v <- 1600 * p * (1 - p) / n
e <- qnorm(.95) * sqrt(v)
ic = c(40 * p + 10 - e, 40 * p + 10 + e)
ic
sqrt(v)
sqrt(v) * 100
sqrt(1600 * p * (1 - p))
n = (qnorm(.9) * sqrt(.5) / .01) ^ 2
n = (qnorm(.9) * sqrt(.25) / .01) ^ 2
qnorm(.9)
n = (1.28 * sqrt(.25) / .01) ^ 2
qnorm(0.98)*6.8/sqrt(35)
qnorm(0.98)*6.8/sqrt(35) + 5
qnorm(0.99)*4.7/sqrt(35) + 5
qnorm(0.98)*6.8/sqrt(35) + 5
qnorm(0.95)*1.5/sqrt(35) + 5
(5.3 - 5.5) / (2 / sqrt(121))
pnorm(-1.1)
pnorm((5.45-5) / (2/sqrt(64)))
(5.45-5) / (2/sqrt(64))
(5.3 - 5.5) / (2 / sqrt(121))
pnorm(-1.1)
(qnorm(.975) * 10 / 3) ^ 2
(qnorm(.99) * 10 / 4) ^ 2
ceiling(42.1)
round(.5)
round(1.5)
round(2.5)
round(3.5)
round(4.5)
round(5.5)
round(6.5)
1 - pnorm(5.45, 5, .)
1 - pnorm(5.45, 5, .5)
1 - pnorm(6.8, 5, .5)
100-18
qnorm(0.025)
1 - pnorm(6.8, 5, .5/sqrt(15))
1 - pnorm(5.45, 5, .5/sqrt(15))
u <- 5.3
n <- 121
d <- 2
x <- 5.2
z <- (x - u) / (d / sqrt(n))
pnorm(z)
u <- 5.5
x <- 5.3
z <- (x - u) / (d / sqrt(n))
pnorm(z)
d <- 3
n <- 81
x <- 5.25
u <- 5.5
z <- (x - u) / (d / sqrt(n))
pnorm(z)
60 * 0.36^2 / (0.36 * 1.14)^2
pchisq(60 * 0.36^2 / (0.36 * 1.14)^2)
pchisq(60 * 0.36^2 / (0.36 * 1.14)^2, 60)
1 - pchisq(60 * 0.36^2 / (0.36 * 1.14)^2, 60)
1 - pchisq(0.36*1.14, 60)
1 - pchisq(60 * 1.14^2, 60)
1 - pchisq(60 * 1.17^2, 60)
pchisq(60 * 0.36*1.14^2 / 0.36^2, 60)
pchisq(60 * (0.36*1.14)^2 / 0.36^2, 60)
1 - pchisq(60 * (0.36*1.14)^2 / 0.36^2, 60)
1 - pchisq(60 * (0.36*1.17)^2 / 0.36^2, 60)
1 - pchisq(60 * 1.17^2, 60)
1 - pchisq(60 * 1.17^2, 60)
qchisq(0.96, 60)
qchisq(0.96, 60) * 0.5^2 / 60
qchisq(0.04, 60) * 0.5^2 / 60
qchisq(0.02, 60) * 0.5^2 / 60
qchisq(0.02, 60)
qchisq(0.02, 60) * 0.5^2 / 60
qchisq(0.04, 60) * 0.5^2 / 60
qchisq(0.04, 60) * 0.5^2 / 60
qchisq(0.6, 60) * 0.5^2 / 60
(qchisq(0.6, 60) * 0.5^2 / 60) ^ 0.5
qchisq(0.96, 60) * 0.5^2 / 60
qt(0.1, 4)
qt(0.9, 4)
sqrt(5)*5/sqrt(3.5)
(qnorm(0.995)/1.1)^2
(qnorm(0.995)/1.1)
(qnorm(0.995)/0.1)^2
(0.2148 - 0.1308) / 2
0.042 / qnorm(0.95)
dp = 0.042 / qnorm(0.95)
sd = dp
rm(dp)
qnorm(0.95) * sqrt(750) / sd
sd = (0.042 + 0.1248) / qnorm(0.95)
qnorm(0.95) * sqrt(750) / sd
sd = (0.042 + 0.2148) / qnorm(0.95)
qnorm(0.95) * sqrt(750) / sd
sd = 0.042 / qnorm(0.95)
library(readxl)
dados <- read_excel("C:/Users/julio/Downloads/Lista_4(1).xlsx")
View(dados)
rm(dados)
library(readxl)
Lista_4_1_ <- read_excel("C:/Users/julio/Downloads/Lista_4(1).xlsx",
sheet = "ExercÃ­cio 10")
View(Lista_4_1_)
dados = Lista_4_1_
rm(Lista_4_1_)
View(dados)
var.test(dados$antes, dados$depois)
var.test(dados$antes, dados$depois, conf.level = 0.01)
var.test(dados$antes, dados$depois, conf.level = 0.99)
t.test(dados$antes, dados$depois, alternative = c("greater"), var.equal = TRUE)
t.test(dados$antes, dados$depois, alternative = c("greater"), var.equal = TRUE, conf.level = 0.99)
t.test(dados$antes, dados$depois, var.equal = TRUE, conf.level = 0.99)
t.test(dados$antes, dados$depois, var.equal = TRUE, conf.level = 0.99, paired = TRUE)
mean(dados$antes)
mean(dados$depois)
t.test(dados$antes, dados$depois, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
var.test(dados$depois, dados$antes, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = FALSE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$antes, dados$depois, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$antes, dados$depois, alternative = c('less'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.995)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.999)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.995)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.996)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.997)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.998)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.9975)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.9)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
1 - qt(0.99, 19)
qt(0.99, 19)
qt(0.99, 19)
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
pvalor = 0.6
alfa = 0.5
as.logical(pvalor>alfa)
t.test()
t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
a = t.test(dados$depois, dados$antes, alternative = c('greater'), paired = TRUE, var.equal = TRUE, conf.level = 0.99)
as.logical(a[3]>alfa)
a[3]
t.test(dados$depois, dados$antes, alternative = c('greater'), mu = 6, paired = TRUE, var.equal = TRUE, conf.level = 0.99)
rm(alfa, pvalor)
rm(sd)
clear
clean
qnorm(0.005)
qnorm(0.975)
qnorm(0.995)
1-qnorm(0.005)
qnorm(0.995)
(qnorm(0.995)/0.1)^2
qt(0.995, 499)
qt(0.995, 499)/0.1
25.85718^2/499
1.339867*500
x <- seq(0, 10, 0.01)
plot(x, (5/(x^0.5))^2)
plot(x, (500/(x^0.5))^2)
plot(x, (1/(x^0.5))^2)
x <- seq(0, 1, 0.01)
plot(x, (1/(x^0.5))^2)
plot(x, (10/(x^0.5))^2)
plot(x, (0.001/(x^0.5))^2)
plot(x, (0.1/(x^0.5))^2)
plot(x, (0.1/(x^0.5))^2,
type="l")
x <- seq(0, 0.2, 0.01)
plot(x, (0.1/(x^0.5))^2,
type="l")
x <- seq(0, 0.2, 0.001)
plot(x, (0.1/(x^0.5))^2,
type="l")
x <- seq(0, 0.05, 0.001)
plot(x, (0.1/(x^0.5))^2,
type="l")
plot(x, (1/(x^0.5))^2,
type="l")
x <- seq(0, 0.0.015, 0.001)
x <- seq(0, 0.015, 0.001)
plot(x, (1/(x^0.5))^2,
type="l")
x <- seq(0, 0.015, 0.00001)
plot(x, (1/(x^0.5))^2,
type="l")
plot(x, (1/(x^0.5))^2,
type="l")
x <- seq(0, 0.01, 0.0001)
plot(x, (1/(x^0.5))^2,
type="l")
x <- seq(0, 0.004, 0.0001)
plot(x, (1/(x^0.5))^2,
type="l")
pchisq(0.99, 2, lower.tail = FALSE)
1 - pchisq(0.99, 2)
1 - pchisq(0.99, 2)
qchisq(0.95, 2)
1517/6*(0.014^2+(0.122)^2/4)
0.112/3.082
5.259-0.0363*8.47
152.4/9599.82
y <- 6135244.87/5000
x <- 4889.58/5000
b1 <- 152.4/9599.82
b0 <- y-b1*x
e^b0
exp(b0)
ln(10000)
log(10000)
exp(6000000)
exp(y)
log(y)
log(b0)
y*5000
log(y*5000)
(152.4/4999)/((sqrt(11670)/4999)*((sqrt(9599,82)/4999))
)
(152.4/4999)/((sqrt(11670)/4999)*((sqrt(9599.82)/4999))
)
(152.4/4999)/((sqrt(11670)/4999)*((sqrt(9599.82)/4999)))
(152.4/4999)/((sqrt(11670/4999))*((sqrt(9599.82/4999))))
exp(7)
r2_ir <- 0.202
r2_r <- 0
g <- 3
n <- 6763
k <- 3
f <- ((r2_ir - r2_r) / g) / ((1 - r2_ir) / (n - k - 1))
rc <- qf(0.95, g, n - k - 1)
p <- 1 - pf(f, g, n - k - 1)
(.202/3)/((1-.202)/(6763-3-1))
1 - pf(f, g, n - k - 1)
n-k-1
b3 <- 0.030
se_b3 <- 0.005
tobs <- (0.030-0)/se_b3
qt(0.05, 43)
qt(0.95, 43)
tcrit <- 1 - qt(0.95, n-k-1)
1-qt(0.95, 6759)
1-pt(tobs)
1-pt(tobs, n-k-1)
exp(2.289 - 0.357 + 0.05*10 + 0.030*10)
exp(2.289)
exp(2.289-0.35)
9.865068/6.951796-1
exp(2.289-)
exp(2.289)
h <- exp(2.289 + 0.05*8)
m <- exp(2.289 - 0.357 + 0.05*8 + 0.03*8)
h - m
(-0.357 + 0.03)
(-0.357 + 0.03*8)
h - m
0.03 / 0.357
0.357 / 0.03
r2_e <- 0.058
lm <- n * r2_r
lm
w_lm <- n * r2_r
rm(lm)
w_lm <- n * r2_e
.058*6763
qchisq(0.95, 33.7404)
qchisq(0.95, 9)
qchisq(0.95, 5)
exp(2.289 - 0.357 + 0.05*10 + 0.030*10)
h - m
0.357 / 0.03
h <- exp(2.289 + 0.05*8)
m <- exp(2.289 - 0.357 + 0.05*8 + 0.03*8)
h - m
0.357 / 0.03
N <- 10^5
x <- runif(N)
y <- runif(N)
inside <- (y <= x) & (y >= x^2)
mean(inside)
plot(x, y, xlim = c(0, 1), ylim = c(0, 1),
col = ifelse(inside, "blue", "red"),
pch = 19, cex = 0.25,
main = mean(inside))
install.packages("torch")
install.packages("luz")
library(torch)
library(torch)
library(luz)
torch_tensor(1)
install.packages("torchvision")
library(torchvision)
remotes::install_github("mlverse/torchdatasets")
library(torchdatasets)
add_channel_dim <- function(img) img$unsqueeze(1)
crop_axes <- function(img) transform_crop(img, top = 0, left = 21, height = 131, width = 130)
root <- file.path(tempdir(), "correlation")
train_ds <- guess_the_correlation_dataset(
# where to unpack
root = root,
# additional preprocessing
transform = function(img) crop_axes(img) %>% add_channel_dim(),
# don't take all data, but just the indices we pass in
indexes = train_indices,
download = TRUE
)
train_ds <- guess_the_correlation_dataset(
# where to unpack
root = root,
# additional preprocessing
transform = function(img) crop_axes(img) %>% add_channel_dim(),
# don't take all data, but just the indices we pass in
indexes = train_indices,
download = TRUE
)
train_indices <- 1:10000
val_indices <- 10001:15000
test_indices <- 15001:20000
train_ds <- guess_the_correlation_dataset(
# where to unpack
root = root,
# additional preprocessing
transform = function(img) crop_axes(img) %>% add_channel_dim(),
# don't take all data, but just the indices we pass in
indexes = train_indices,
download = TRUE
)
valid_ds <- guess_the_correlation_dataset(
root = root,
transform = function(img) crop_axes(img) %>% add_channel_dim(),
indexes = val_indices,
download = FALSE
)
test_ds <- guess_the_correlation_dataset(
root = root,
transform = function(img) crop_axes(img) %>% add_channel_dim(),
indexes = test_indices,
download = FALSE
)
View(test_ds)
length(train_ds)
length(valid_ds)
length(test_ds)
train_ds[1]
train_dl <- dataloader(train_ds, batch_size = 64, shuffle = TRUE)
length(train_dl)
batch <- dataloader_make_iter(train_dl) %>% dataloader_next()
dim(batch$x)
dim(batch$y)
par(mfrow = c(8,8), mar = rep(0, 4))
images <- as.array(batch$x$squeeze(2))
images %>%
purrr::array_tree(1) %>%
purrr::map(as.raster) %>%
purrr::iwalk(~{plot(.x)})
batch$y %>% as.numeric() %>% round(digits = 2)
valid_dl <- dataloader(valid_ds, batch_size = 64)
length(valid_dl)
test_dl <- dataloader(test_ds, batch_size = 64)
length(test_dl)
zooming in on just initialize() - don't run standalone
# zooming in on just initialize() - don't run standalone
net <- nn_module(
# ...
initialize = function() {
self$conv1 <- nn_conv2d(in_channels = 1, out_channels = 32, kernel_size = 3)
self$conv2 <- nn_conv2d(in_channels = 32, out_channels = 64, kernel_size = 3)
self$conv3 <- nn_conv2d(in_channels = 64, out_channels = 128, kernel_size = 3)
self$fc1 <- nn_linear(in_features = 14 * 14 * 128, out_features = 128)
self$fc2 <- nn_linear(in_features = 128, out_features = 1)
},
# ...
)
library(tidyverse)
babynames
library(babynames)
install.packages("babynames")
library(babynames)
babynames %>%
group_by(year, sex) %>%
summarise(prop = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop, color = sex)) +
labs(x = "Year", y = "",
title = "Baby names")
babynames %>%
group_by(year, sex) %>%
summarise(prop = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop, color = sex)) +
geom_line() +
labs(x = "Year", y = "",
title = "Baby names")
formals(str_view)$html
formals(str_view)$html <- TRUE
str_view(x, ".a.")
str_view("an")
str_view(x, ".a.")
x <- c("apple", "banana", "pear")
str_view(x, ".a.")
str_view(x, "^a")
str_view(x, "r$")
install.packages("devtools")
devtools::install_github("axlehner/SpatialRDD") # add build_vignettes = TRUE if you want to have access to them via R, otherwise just look at the .Rmd on github in \vignettes
install.packages("remote")
devtools::install_github("axlehner/SpatialRDD")
remote::install_github("axlehner/SpatialRDD")
Sys.getenv("R_PROFILE_USER")
file.exists(file.path(getwd(), ".Rprofile"))7
file.exists(file.path(getwd(), ".Rprofile"))
setwd("C:/Dev/_INSPER/microIV-apsF")
setwd("C:/Dev/_INSPER/microIV-apsF")
file.exists(file.path(getwd(), ".Rprofile"))
Sys.getenv("R_PROFILE_USER")
.libPaths()
github::install_github("axlehner/SpatialRDD")
devtools::install_github("axlehner/SpatialRDD")
devtools::install_github("axlehner/SpatialRDD")
devtools::install_github("axlehner/SpatialRDD")
.libPaths()
Sys.getenv("R_PROFILE_USER")
Sys.getenv("R_PROFILE_USER")
c(Sys.getenv("R_PROFILE_USER"), file.path(getwd(),".Rprofile"))
c(Sys.getenv("R_PROFILE_USER"), file.path(getwd(),".Rprofile"))
Sys.getenv("R_PROFILE_USER")
Sys.getenv("R_PROFILE_USER")
c(Sys.getenv("R_PROFILE_USER"), file.path(getwd(),".Rprofile"))
devtools::install_github("axlehner/SpatialRDD")
install.packages("C:\Users\julio\Downloads\SpatialRDD-master.zip")
install.packages("C:/Users/julio/Downloads/SpatialRDD-master.zip")
library(SpatialRDD-master)
.libPaths()
library(SpatialRDD)
install.packages("C:/Users/julio/Downloads/SpatialRDD.zip")
install.packages("C:/Users/julio/Downloads/SpatialRDD.zip", repos = NULL)
install.packages("C:/Users/julio/Downloads/SpatialRDD-master.zip", repos = NULL)
library(SpatialRDD-master)
require(SpatialRDD-master)
install.packages("C:/Users/julio/Downloads/SpatialRDD-master.zip", repos = NULL)
library(SpatialRDD-master)
install.packages("C:/Users/julio/Downloads/SpatialRDD.zip", repos = NULL)
library(SpatialRDD-master)
library(SpatialRDD)
